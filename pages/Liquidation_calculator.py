# flake8: noqa: E501
import asyncio
import streamlit as st
from modules.data_loader import (
    get_bybit_exchange,
    get_ticker,
    get_ohlcv,
    get_long_short_ratio,
    get_open_interest,
    get_funding_history,
)
from modules.Indicators import *

from modules.calculations import normalize_symbol

from modules.indicators.stop_loss import stop_loss_settings
from modules.indicators.posicion import posicion_settings, position_info


# --- Page configuration ---
st.set_page_config(page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏", layout="wide")
exchange = get_bybit_exchange()

# --- Sidebar ---
with st.sidebar:

    # --- Symbol ---
    st.header("–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞")
    try:    
        symbol = st.text_input("–°–∏–º–≤–æ–ª —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—Ä—ã", st.query_params['symbol'])
    except KeyError:
        symbol = st.text_input("–°–∏–º–≤–æ–ª —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—Ä—ã", "BTCUSDT")

    # symbol = normalize_symbol(symbol)
    current_price = get_ticker(symbol)['last']

    # --- Indicators ---
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤")
    indicator_options = [
        "–û–±—ä—ë–º",
        "–ü–æ–∑–∏—Ü–∏—è",
        "SMA –ø–æ –æ–±—ä—ë–º—É",
        "Stop-loss",
        "MACD",
        "Long-Short Ratio",
        "Funding Rate",
        "Open-interest",
        # "–ê–Ω–æ–º–∞–ª–∏–∏ –æ–±—ä—ë–º–∞",
    ]
    selected_indicators = st.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä", indicator_options, default=[]
    )

    if "–ü–æ–∑–∏—Ü–∏—è" in selected_indicators:
        stop_loss_allowed = ["Stop-loss"]
    else:
        stop_loss_allowed = []
        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ —ç—Ç–æ–≥–æ –∫–∞–∫-—Ç–æ —É–º—É–¥—Ä–∏–ª—Å—è ¬´–∑–∞—Ö–æ–ª–¥–∏—Ç—å¬ª Stop-loss ‚Äî
        # —É–¥–∞–ª–∏–º –µ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ä–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–æ–≤
        if "Stop-loss" in selected_indicators:
            selected_indicators.remove("Stop-loss")
            st.warning("–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Stop-loss, —Å–ø–µ—Ä–≤–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä ¬´–ü–æ–∑–∏—Ü–∏—è¬ª.")


    if "–ü–æ–∑–∏—Ü–∏—è" in selected_indicators:
        position_details = posicion_settings(current_price)

    if "SMA –ø–æ –æ–±—ä—ë–º—É" in selected_indicators:
        st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMA")
        sma_period = st.sidebar.slider(
            "–ü–µ—Ä–∏–æ–¥ SMA",
            min_value=5,
            max_value=50,
            value=9,
            step=1
        )

    if "–ê–Ω–æ–º–∞–ª–∏–∏ –æ–±—ä—ë–º–∞" in selected_indicators:
        st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–æ–º–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–º–∞")
        volume_multiplier = st.sidebar.slider(
            "–ú–Ω–æ–∂–∏—Ç–µ–ª—å –æ–±—ä—ë–º–∞",
            min_value=1.0,
            max_value=100.0,
            value=2.0,
            step=0.1
        )

    if "Stop-loss" in selected_indicators:
        params_key = "sl_params"
        current_params = (
            position_details["entry_price"],
            position_details["initial_deposit"],
            position_details["leverage"],
            position_details["position_type"],
        )

        if st.session_state.get(params_key) != current_params:
            for k in ("sl_price", "sl_pct", "sl_amt"):
                if k in st.session_state:
                    del st.session_state[k]
            st.session_state[params_key] = current_params

        stop_loss_price = stop_loss_settings(
            leverage=position_details["leverage"],
            entry_price=position_details["entry_price"],
            position_type=position_details["position_type"],  
            initial_deposit=position_details["initial_deposit"],          
        )
        

# --- Load data and charts ---
st.header(f"{symbol} ‚Äì ${current_price}")
tabs = st.tabs(["1 –¥–µ–Ω—å", "1 —á–∞—Å", "15 –º–∏–Ω—É—Ç", "5 –º–∏–Ω—É—Ç", "1 –º–∏–Ω—É—Ç–∞"])
timeframes = ["1d", "1h", "15m", "5m", "1m"]
df_ohlcv_async = asyncio.run(get_ohlcv(symbol, timeframes))

if "–ü–æ–∑–∏—Ü–∏—è" in selected_indicators:
    position_info(current_price=current_price, position_details=position_details)

if "Long-Short Ratio" in selected_indicators:
    df_long_short_ratio_async = asyncio.run(
        get_long_short_ratio(symbol, ["1d", "1h", "15min", "5min"])
    )    

if "Open-interest" in selected_indicators:
    df_open_int_async = asyncio.run(
        get_open_interest(symbol, ["1d", "1h", "15min", "5min"])
    )

# ‚úÖ
if "Funding Rate" in selected_indicators:
    funding_dataframe = get_funding_history(symbol, timeframes)


with st.spinner("–ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤..."):
    for i, (tab, timeframe) in enumerate(zip(tabs, timeframes)):
        with tab:

            df_ohlcv = df_ohlcv_async.get(timeframe)
            if df_ohlcv is None or df_ohlcv.empty:
                st.warning(f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–≤–µ—á—Ç–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ {timeframe}")
                continue

            chart = Chart(df_ohlcv)
            chart.add(CandlestickIndicator())
            chart.add(CurrentPriceIndicator())

            # ‚úÖ
            if "–û–±—ä—ë–º" in selected_indicators:
                chart.add(VolumeIndicator())

            # ‚úÖ
            if "SMA –ø–æ –æ–±—ä—ë–º—É" in selected_indicators:
                chart.add(SMAVolumeIndicator(period=sma_period))

            # ‚úÖ
            if "–ü–æ–∑–∏—Ü–∏—è" in selected_indicators:
                chart.add(PositionIndicator(position_details["entry_price"], position_details["liquidation_price"]))

            # ‚úÖ
            if "Stop-loss" in selected_indicators and stop_loss_price is not None:
                    chart.add(StopLossIndicator(stop_loss_price))

            # ‚úÖ
            if "MACD" in selected_indicators:
                chart.add(MACDIndicator())

            if "Long-Short Ratio" in selected_indicators:
                df_ratio = df_long_short_ratio_async.get(timeframe, pd.DataFrame(columns=["timestamp","ratio"]))
                if df_ratio.empty:
                    st.warning(f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ long-short{timeframes[i]}")
                else:   
                    chart.add(LongShortRatioIndicator(df_ratio))

            if "Open-interest" in selected_indicators:
                df_op_int = df_open_int_async.get(timeframe, pd.DataFrame(columns=["timestamp","openInterest"]))
                if df_op_int.empty:
                    st.warning(f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ open interest {timeframes[i]}")
                else:   
                    chart.add(OpenInterestIndicator(df_op_int))

            # ‚úÖ
            if "Funding Rate" in selected_indicators:
                df_fund = funding_dataframe.get(timeframe, pd.DataFrame(columns=["timestamp","fundingRate"]))
                if df_fund.empty:
                    st.warning(f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ funding rate {timeframes[i]}")
                else:   
                    chart.add(FundingRateIndicator(df_fund))

            fig = chart.build()
            st.plotly_chart(fig, use_container_width=True, key=f"{timeframe}_plt")


if "–ü–æ–∑–∏—Ü–∏—è" in selected_indicators:
    with st.expander("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å—á—ë—Ç–µ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏"):
        st.markdown("""
            ### üìò –§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á—ë—Ç–∞ —Ü–µ–Ω—ã –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏

            **–î–ª—è Long-–ø–æ–∑–∏—Ü–∏–π:**
            ```
            –õ–∏–∫–≤. —Ü–µ–Ω–∞ = Entry Price √ó (1 - (Total Margin - Maintenance Margin) / Position Value)
            ```

            **–î–ª—è Short-–ø–æ–∑–∏—Ü–∏–π:**
            ```
            –õ–∏–∫–≤. —Ü–µ–Ω–∞ = Entry Price √ó (1 + (Total Margin - Maintenance Margin) / Position Value)
            ```

            **–ì–¥–µ:**
            - `Entry Price` ‚Äî —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞  
            - `Leverage` ‚Äî –ø–ª–µ—á–æ  
            - `Initial Deposit` ‚Äî –Ω–∞—á–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç  
            - `Support Investment` ‚Äî –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏  
            - `Total Margin` = `Initial Deposit + Support Investment`  
            - `Position Value` = `Initial Deposit √ó Leverage`  
            - `Maintenance Margin` —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—è–º —Ä–∏—Å–∫–∞  
        """)
